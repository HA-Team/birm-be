### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Account {
  birms(input: BirmsNearLocationInput!): [Birm!]!
}

input AuthenticateUserInput {
  password: String
  username: String
}

type AuthenticateUserPayload {
  token: String
}

type Birm {
  id: ID!
  location: Location!
  name: String!
}

input BirmsNearLocationInput {
  coordinates: [Float!]
  maxDistance: Int
}

input CreateBirmInput {
  coordinates: [Float!]
  name: String
}

input CreateUserInput {
  password: String
  username: String
}

type Location {
  coordinates: [Float!]!
  type: String!
}

type Mutation {
  authenticate(input: AuthenticateUserInput!): AuthenticateUserPayload!
  createBirm(input: CreateBirmInput!): Birm!
  createUser(input: CreateUserInput!): User!
}

type Query {
  viewer: User!
}

type User {
  _id: String
  account: Account!
  id: ID!
  username: String
}
